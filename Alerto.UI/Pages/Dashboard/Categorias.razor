@page "/categorias"
@layout DashboardLayout


@if (MostrarPopup)
{
    <EliminarCategoria Categoria="@Categoria"/>
}
<div class=" h-full flex flex-col space-y-4 justify-center items-center">
    <div class=" w-[95%] h-full space-y-4">
        <div class=" space-y-2">
            <div>
                <h1 class=" text-2xl font-bold text-Primaria">As Tuas Categorias</h1>
                <p class=" text-sm text-Secundaria">Abaixo estao listadas todas as suas categorias</p>
            </div>
        </div>
        <div class=" flex flex-wrap">
            @foreach (var categoria in ListaCategoria)
            {
                <div class=" shadow-md flex flex-col shadow-Primaria rounded-md p-2 w-[31%] h-[35%] m-2">

                    <img width="20" height="20" @onclick="() => Eliminar(categoria.Id)" class=" relative  left-[92%] hover:scale-110 transition-transform active:scale-100"
                         src="https://img.icons8.com/ios-filled/20/5688c7/delete-sign--v1.png" alt="delete-sign--v1"/>

                    <div class=" flex flex-col justify-center h-[50%] items-center text-center p-1">
                        <div class=" w-[50%] text-Primaria">
                            <h1 class=" font-bold">@categoria.Categoria</h1>
                        </div>
                        <div class=" w-[50%] text-Secundaria">
                            <h2>@categoria.NumeroTarefas Tarefas</h2>
                        </div>
                    </div>
                    <div class=" text-center h-[25%]">
                        <button @onclick="() => VerTarefa(categoria.Categoria)" class=" p-2 bg-Primaria w-[80%] rounded text-Neutra hover:scale-[1.05] transition-all">
                            Ver
                            Tarefas
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


@code {
    public List<ListaAlteraCategorias> ListaCategoria { get; set; } = new List<ListaAlteraCategorias>();
    public ListaAlteraCategorias Categoria { get; set; }
    public bool MostrarPopup { get; set; } = false;

    protected override async void OnInitialized()
    {
        ListaCategoria = await api.ListarCategorias();
        StateHasChanged();
    }

    async void Eliminar(int idCategoria)
    {
        Categoria = ListaCategoria.Find(l => l.Id == idCategoria);
        MostrarPopup = true;
        await js.InvokeVoidAsync("MostrarEliminarCategoria");
        StateHasChanged();
    }

    void VerTarefa(string NomeCategoria)
    {
        Rota.NavigateTo($"/tarefas/categoria/{NomeCategoria}");
    }

}