@page "/tarefas"
@page "/tarefas/categoria/{NomeCategoria}"
@page "/tarefas/lista/{NomeLista}"
@layout DashboardLayout


<div class=" h-full flex flex-col space-y-4 justify-center items-center">
    <div class=" w-[95%] h-full space-y-4">
        <div class=" space-y-2">
            <div>
                <h1 class=" text-2xl font-bold text-Primaria">As Tuas Tarefas</h1>
                <p class=" text-sm text-Secundaria">
                    Abaixo estao listadas todas as suas tarefas. Você pode filtra-las
                    para melhor busca.
                </p>
            </div>
            <div>
                <details>
                    <summary>Filtrar</summary>
                    <div class=" flex space-x-4">
                        <select
                            class=" py-2 caret-Intermedia focus:outline-0 focus:border-b-Intermedia transition-all w-full border-b-2 border-Primaria">
                            <option selected>Categoria</option>
                        </select>
                        <select
                            class=" py-2 caret-Intermedia focus:outline-0 focus:border-b-Intermedia transition-all w-full border-b-2 border-Primaria">
                            <option selected>Lista</option>
                        </select>
                    </div>
                </details>
            </div>
        </div>
        <div class=" flex flex-wrap">
            @foreach (var tarefa in ListaTarefas)
            {
                <div class=" shadow-md flex flex-col h-[250px] shadow-Primaria rounded-md p-2 w-[31%]  m-2">
                    <div class=" flex h-[33%] border-b-2 border-Primaria p-1">
                        <div class=" w-[50%] text-Primaria">
                            <h1 class=" font-bold">@tarefa.Tarefa</h1>
                            <h2 class=" text-xs text-Secundaria font-medium">@tarefa.Categoria</h2>
                        </div>
                        <div class=" text-right w-[50%] text-sm text-Secundaria">
                            <h2>Até @DataConclusao(@tarefa.Conclusao)</h2>
                        </div>
                    </div>
                    <div class=" py-2 h-[33%] text-Secundaria\">
                        <p>@tarefa.Descricao</p>
                    </div>
                    <div class=" h-[33%] text-center">
                        @if (tarefa.Concluida)
                        {
                            <button class=" p-2 bg-Secundaria w-[80%] rounded text-Neutra hover:scale-[1.05] transition-all">
                                Tarefa Concluida!
                            </button>
                        }
                        else
                        {
                            <button @onclick="() => ConcluirTarefa(tarefa.Id)" class=" p-2 bg-Primaria w-[80%] rounded text-Neutra hover:scale-[1.05] transition-all">
                                Concluir
                            </button>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code
{
    [Parameter] public string NomeCategoria { get; set; } = "";
    [Parameter] public string NomeLista { get; set; } = "";
    public List<ListaTarefaDTO> ListaTarefas { get; set; } = new List<ListaTarefaDTO>();

    protected override async void OnInitialized()
    {
        ListaTarefas = await api.ListarTarefas();
        if (!string.IsNullOrEmpty(NomeCategoria))
        {
            ListaTarefas = ListaTarefas.FindAll(l => l.Categoria == NomeCategoria);
        }
        else if (!string.IsNullOrEmpty(NomeLista))
        {
            ListaTarefas = ListaTarefas.FindAll(l => l.ListaPertencente == NomeLista);
        }

        StateHasChanged();
    }

    private async void ConcluirTarefa(int ID)
    {
        if (await api.ConcluirTarefa(ID))
        {
            Console.WriteLine("Tarefa concluida com sucesso!");
            StateHasChanged();
        }
        else
        {
            Console.WriteLine("Erro ao concluir tarefa!");
        }
    }

    private string DataConclusao(DateTime data)
    {
        var dia = data.DayOfWeek switch
        {
            DayOfWeek.Friday => "Sexta-Feira",
            DayOfWeek.Monday => "Segunda-Feira",
            DayOfWeek.Tuesday => "Terça-Feira",
            DayOfWeek.Wednesday => "Quarta-Feira",
            DayOfWeek.Thursday => "Quinta-Feira",
            DayOfWeek.Saturday => "Sábado",
            DayOfWeek.Sunday => "Domingo"
        };

        var Mes = data.Month switch
        {
            1 => "Janeiro",
            2 => "Fevereiro",
            3 => "Março",
            4 => "Abril",
            5 => "Maio",
            6 => "Junho",
            7 => "Julho",
            8 => "Agosto",
            9 => "Setembro",
            10 => "Outubro",
            11 => "Novembro",
            12 => "Dezembro"
        };

        return $"{dia}, {data.Day} de {Mes} de {data.Year}";
    }
}